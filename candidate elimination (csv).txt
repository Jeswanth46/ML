import pandas as pd

def load_data(filename):
    data = pd.read_csv(filename)
    return data

def consistent(hypothesis, instance):
    for h, val in zip(hypothesis, instance):
        if h != '?' and h != val:
            return False
    return True

def candidate_elimination(data):
    concepts = data.iloc[:, :-1].values
    target = data.iloc[:, -1].values

    # Initialize S to the first positive example
    for i, val in enumerate(target):
        if val == 'Yes':
            S = list(concepts[i])
            break
    else:
        S = ['ϕ'] * len(concepts[0])  # if no positive example

    G = [['?' for _ in range(len(S))]]  # most general hypothesis

    for i, instance in enumerate(concepts):
        if target[i] == 'Yes':  # positive example
            for j in range(len(S)):
                if S[j] != instance[j]:
                    S[j] = '?'
            G = [g for g in G if consistent(g, instance)]
        else:  # negative example
            G_new = []
            for g in G:
                if consistent(g, instance):
                    for j in range(len(g)):
                        if g[j] == '?':
                            if S[j] != instance[j]:
                                new_hypothesis = g.copy()
                                new_hypothesis[j] = S[j]
                                G_new.append(new_hypothesis)
            G.extend(G_new)
            G = [g for g in G if any(h != 'ϕ' for h in g)]
            # Remove more specific hypotheses
            G = [list(x) for x in set(tuple(x) for x in G)]

    return S, G

# Main execution
if __name__ == '__main__':
    filename = 'training_data.csv'
    data = load_data(filename)
    S_final, G_final = candidate_elimination(data)

    print("Final Specific Hypothesis (S):", S_final)
    print("Final General Hypotheses (G):")
    for g in G_final:
        print(g)


output 

Final Specific Hypothesis (S): ['Sunny', 'Warm', '?', 'Strong', '?', '?']
Final General Hypotheses (G):
['?', 'Warm', '?', 'Strong', '?', '?']
['Sunny', '?', '?', '?', '?', '?']

