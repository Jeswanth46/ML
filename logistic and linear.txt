from sklearn.datasets import make_classification
from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, accuracy_score

# 1. Generate a synthetic binary classification dataset
X, y = make_classification(n_samples=200, n_features=2, n_classes=2, random_state=42)

# 2. Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 3. Linear Regression model (for classification, threshold at 0.5)
lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)
y_pred_lin = lin_reg.predict(X_test)
y_pred_lin_class = (y_pred_lin >= 0.5).astype(int)

# 4. Logistic Regression model
log_reg = LogisticRegression()
log_reg.fit(X_train, y_train)
y_pred_log = log_reg.predict(X_test)

# 5. Evaluate models
print("Linear Regression MSE:", mean_squared_error(y_test, y_pred_lin))
print("Linear Regression Accuracy:", accuracy_score(y_test, y_pred_lin_class))

print("Logistic Regression Accuracy:", accuracy_score(y_test, y_pred_log))

output

Linear Regression MSE: 0.074
Linear Regression Accuracy: 0.85
Logistic Regression Accuracy: 0.90
